[gd_scene load_steps=13 format=2]

[ext_resource path="res://Juego/Naves/Player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Juego/Niveles/Nivel.gd" type="Script" id=2]
[ext_resource path="res://default_env.tres" type="Environment" id=3]
[ext_resource path="res://Juego/Explosiones/Explosion.tscn" type="PackedScene" id=4]
[ext_resource path="res://Juego/Explosiones/ExplosionMeteorito.tscn" type="PackedScene" id=5]
[ext_resource path="res://Juego/Peligros/SectorDePeligro.tscn" type="PackedScene" id=6]
[ext_resource path="res://Juego/Meteoritos/Meteorito.tscn" type="PackedScene" id=7]
[ext_resource path="res://Juego/Meteoritos/SectorMeteoritos.tscn" type="PackedScene" id=8]
[ext_resource path="res://icon.png" type="Texture" id=9]
[ext_resource path="res://Juego/Niveles/CamaraJuego.gd" type="Script" id=10]
[ext_resource path="res://Juego/Estaciones/EstracionRecarga.tscn" type="PackedScene" id=11]

[sub_resource type="GDScript" id=1]
script/source = "#Player.gd
class_name NaveBase
extends RigidBody2D

## Enums (enumerables)
enum ESTADOS {SPAWN, VIVO, INVENCIBLE, MUERTO}

## Atributos Export
export var potencia_motor:int = 20
export var potencia_rotacion:int = 280
export var estela_maxima:int = 150
export var hitpoints:float = 100

## Atributos
var empuje:Vector2 = Vector2.ZERO
var dir_rotacion:int = 0
var estado_actual:int = ESTADOS.SPAWN

## Atributos onready
onready var canion:Canion = $Canion
onready var laser:RayoLaser = $LaserBeam2D setget ,get_laser
onready var estela:Estela = $EstelaPuntoInicio/Trail2D
onready var motor_sfx:Motor = $MotorSFX
onready var colisionador:CollisionShape2D = $CollisionShape2D
onready var impacto_sfx:AudioStreamPlayer = $ImpactosSFX
onready var escudo:Escudo = $Escudo setget ,get_escudo

#JMG
onready var animacion:AnimationPlayer = $AnimationPlayer

## Setter y Getters
func get_laser() -> RayoLaser:
	return laser

func get_escudo() -> Escudo:
	return escudo

## Metodos
func _ready() -> void:
	cambiar_estado(estado_actual)

func _integrate_forces(state: Physics2DDirectBodyState) -> void:
	apply_torque_impulse(dir_rotacion * potencia_rotacion)
	apply_central_impulse(empuje.rotated(rotation))

func _process(delta: float) -> void:
	player_input()

func _unhandled_input(event: InputEvent) -> void:
	if not jugador_activo():
		return
	# Control de Escudo
	if event.is_action_pressed(\"escudo\") and not escudo.get_esta_activado():
		escudo.activar()
	
	# Disparo Secundario
	if event.is_action_pressed(\"disparo_secundario\"):
		laser.set_is_casting(true)
	
	if event.is_action_released(\"disparo_secundario\"):
		laser.set_is_casting(false)
	
	# Control de Estela
	if event.is_action_pressed(\"mover_adelante\"):
		estela.set_largo(estela_maxima)
		motor_sfx.sonido_on()
		
	elif event.is_action_pressed(\"mover_atras\"):
		estela.set_largo(0)
		motor_sfx.sonido_on()
	
	if (event.is_action_released(\"mover_adelante\") or event.is_action_released(\"mover_atras\")):
		motor_sfx.sonido_off()

## Metodos Custom
func destruir() -> void:
	cambiar_estado(ESTADOS.MUERTO)
	
func player_input() -> void:
	if not jugador_activo():
		return
	# Empuje
	empuje = Vector2.ZERO
	if Input.is_action_pressed(\"mover_adelante\"):
		#estela.set_largo(estela_maxima)
		empuje = Vector2(potencia_motor,0)
	elif Input.is_action_pressed(\"mover_atras\"):
		#estela.set_largo(0)
		empuje = Vector2(-potencia_motor,0)
		
	# Rotación
	dir_rotacion = 0
	if Input.is_action_pressed(\"rotar_antihorario\"):
		dir_rotacion -=1
	elif Input.is_action_pressed(\"rotar_horario\"):
		dir_rotacion += 1
	
	# Disparo primario
	if Input.is_action_just_pressed(\"disparo_principal\"):
		canion.set_esta_disparando(true)
	
	if Input.is_action_just_released(\"disparo_principal\"):
		canion.set_esta_disparando(false)
	
func cambiar_estado(nuevo_estado: int) -> void:
	match nuevo_estado:
		ESTADOS.SPAWN:
			colisionador.set_deferred(\"disabled\", true)
			canion.set_puede_disparar(false)
		ESTADOS.VIVO:
			colisionador.set_deferred(\"disabled\", false)
			canion.set_puede_disparar(true)
		ESTADOS.MUERTO:
			colisionador.set_deferred(\"disabled\", true)
			canion.set_puede_disparar(false)
			Eventos.emit_signal(\"nave_destruida\", self, global_position, 2)
			queue_free()
		ESTADOS.INVENCIBLE:
			colisionador.set_deferred(\"disabled\", true)
		_:
			printerr(\"Error cambiando los estados\")
	estado_actual = nuevo_estado

func jugador_activo () -> bool:
	if estado_actual in [ESTADOS.MUERTO, ESTADOS.SPAWN]:
		return false
	else:
		return true

func recibir_danio(intensidad_danio:float) -> void:
	hitpoints -= intensidad_danio
	if hitpoints <= 0:
		destruir()
	#animacion.play(\"impacto\")
	impacto_sfx.play()

## señales internas
func _on_AnimationPlayer_animation_finished(anim_name: String) -> void:
	if anim_name == \"spawn\":
		cambiar_estado(ESTADOS.VIVO)

func _on_body_entered(body: Node) -> void:
	if body is Meteorito:
		destruir()
"

[node name="NivelTest" type="Node2D"]
script = ExtResource( 2 )
explosion = ExtResource( 4 )
meteorito = ExtResource( 7 )
explosion_meteorito = ExtResource( 5 )
sector_meteoritos = ExtResource( 8 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 3 )

[node name="TriggersLluviaMeteoritos" type="Node" parent="."]

[node name="SectorDePeligro" parent="TriggersLluviaMeteoritos" instance=ExtResource( 6 )]
position = Vector2( 713, 328 )
tipo_peligro = "Meteorito"

[node name="CameraNivel" type="Camera2D" parent="."]
position = Vector2( 1032, 542 )
script = ExtResource( 10 )

[node name="TweenZoom" type="Tween" parent="CameraNivel"]

[node name="TweenCamara" type="Tween" parent="."]

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2( 256, 256 )

[node name="Sprite" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 952, 80 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite2" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( -268, 71 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite3" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( -271, 793 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite4" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 958, 799 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite5" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1537, 802 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite6" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( -52, 371 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite7" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( -73, 646 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite8" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1440.2, 361.2 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite9" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1599.2, 89.2 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite10" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 92, 209 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite11" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( -205, 556 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite12" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 571, 748 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite13" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 230, 563 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite14" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 460, 434 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite15" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 251, 817 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite16" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 565, 268 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite17" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1350, 119 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite18" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1321, 670 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="Sprite19" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 286, -32 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 9 )

[node name="ContenedorEstaciones" type="Node" parent="."]

[node name="EstracionRecarga" parent="ContenedorEstaciones" instance=ExtResource( 11 )]
position = Vector2( 5, 2.38419e-07 )
scale = Vector2( 0.8, 0.8 )

[node name="Player" parent="." instance=ExtResource( 1 )]
position = Vector2( 225, 375 )
script = SubResource( 1 )

[connection signal="tween_completed" from="TweenCamara" to="." method="_on_TweenCamara_tween_completed"]
